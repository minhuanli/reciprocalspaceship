{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Merging with a Robust Error Model  \n",
    "\n",
    "In the previous example, we computed the common merging statistics $CC_{1/2}$ and $CC_{anom}$ to explore a dataset with significant anomalous signal from native sulfur atoms. One assumption that we made while merging is that the scaled reflection observations are normally distributed about the mean. This assumption is consistent with the merging strategy used by [AIMLESS](https://doi.org/10.1107/S0907444913000061), which was used to scale the data in the first place. In this example, we will explore whether the scaled reflection observations are normally distributed, and whether we can improve the anomalous signal ($CC_{anom}$) by using a different error model.\n",
    "\n",
    "_Note:_ See [pytorch.org](https://pytorch.org/) for customizable PyTorch installation instructions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "sns.set_context(\"notebook\", font_scale=1.3)\n",
    "from tqdm.notebook import tqdm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: torch in /Users/jgreisman/miniconda3/envs/test/lib/python3.9/site-packages (1.10.1)\r\n",
      "Requirement already satisfied: typing-extensions in /Users/jgreisman/miniconda3/envs/test/lib/python3.9/site-packages (from torch) (4.0.1)\r\n"
     ]
    }
   ],
   "source": [
    "# Install PyTorch to running kernel\n",
    "import sys\n",
    "!{sys.executable} -m pip install torch"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import torch"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import reciprocalspaceship as rs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9.18\n"
     ]
    }
   ],
   "source": [
    "print(rs.__version__)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---\n",
    "### Normal Error Model\n",
    "\n",
    "It is common in merging to assume that scaled intensities are normally distributed about the true mean. We can assess the validity of this assumption by looking at the residuals between scaled intensities and the maximum likelihood esimate of their true intensity."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "ds = rs.read_mtz(\"data/HEWL_unmerged.mtz\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "merged_normal = rs.algorithms.merge(ds)\n",
    "merged_normal = merged_normal.stack_anomalous()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "ds.hkl_to_asu(anomalous=True, inplace=True)\n",
    "ds[\"IML\"] = merged_normal.loc[ds.index, \"I\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Expected residuals for normally distributed data\n",
    "x = np.linspace(-6., 6., 50)\n",
    "bin_width = x[1] - x[0]\n",
    "normal = bin_width*ds.shape[0]*(1/np.sqrt(2*np.pi))*np.exp(-0.5*x**2)\n",
    "\n",
    "# Histogram Residuals\n",
    "fig = plt.figure(figsize=(8, 5))\n",
    "sns.histplot((ds.I - ds.IML)/ds.SIGI, bins=x, color=\"k\", label=\"Residuals\")\n",
    "plt.plot(x, normal, 'r-', lw=2, label=\"Expected\")\n",
    "plt.ylabel(\"Log Count\")\n",
    "plt.yscale(\"log\")\n",
    "plt.ylim(1e0, 3e5)\n",
    "plt.xlabel(r\"$\\frac{I_{h,i} - I^{ML}_{h}}{\\sigma_{I_{h,i}}}$\", fontsize=24)\n",
    "plt.legend(loc='center left', bbox_to_anchor=(1, 0.5))\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "These residuals are not symmetric about $0$, which would have been expected for truly normally distributed data. In addition, the tails are much \"heavier\" than for a normal distribution. This suggests that it may be possible to do a better job merging these scaled observations by using a different error model that is more robust to outliers."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---\n",
    "### Generalized Merging with Flexible Error Model\n",
    "\n",
    "The inverse-variance weighting scheme implemented in `rs.algorithms.merge()` is the maximum likelihood estimator for the true mean if we assume the observations are normally distributed. \n",
    "However, we can write a more general form for the maximum likelihood estimator for the mean of each intensity distribution, $\\mu \\in\\mathbb{R}^{|\\mathbf{H}|}$, without assuming a specific distribution for the error model. \n",
    "Therefore, we will maximize the probability of the data given the model\n",
    "\\begin{align*}\n",
    "P(data | model) &= \\prod_{h,i}P(I_{h,i}|\\mu_h, \\sigma_{I_{h,i}}) \n",
    "\\end{align*}\n",
    "by minimizing the negative log likelihood\n",
    "\\begin{align*}\n",
    "\\mathcal{L} &\\triangleq -\\log P(data | model) \\\\\n",
    "&= -\\sum_{h,i}\\log P(I_{h,i}|\\mu_h, \\sigma_{I_{h,i}}) \\\\\n",
    "I^{ML} &= \\underset{\\mu}{\\mathrm{argmin}}\\ -\\sum_{h,i} \\log P(I_{h,i} | \\mu_h, \\sigma_{I_{h,i}}) \n",
    "\\end{align*}\n",
    "with respect to $\\mu$. With this formulation, it is possible to supply any parametric form for the error model belonging to the [location-scale family](https://en.wikipedia.org/wiki/Location%E2%80%93scale_family) of distributions. This maximum likelihood estimator is implemented in the function below."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "def merge_mle(ds, distribution, *args, lr=.5, progress_bar=True, return_loss=False, **kwargs):\n",
    "    \"\"\"\n",
    "    Merge observations using the provided distribution as an error model.\n",
    "    Additional arguments or keyword arguments will be passed to the PyTorch \n",
    "    distribution constructor.\n",
    "    \n",
    "    Parameters\n",
    "    ----------\n",
    "    ds : rs.DataSet\n",
    "        Scaled, unmerged observations\n",
    "    distribution : torch.distributions.Distribution\n",
    "        PyTorch distribution to use as error model\n",
    "    lr : float\n",
    "        Learning rate for Adam optimizer\n",
    "    progress_bar : bool\n",
    "        Whether to display a progress bar for optimization\n",
    "    return_loss : bool\n",
    "        Whether to return the loss function values during optimization\n",
    "        \n",
    "    Returns\n",
    "    -------\n",
    "    rs.DataSet or (rs.DataSet, losses)\n",
    "        Merged DataSet with or without list of loss function values\n",
    "    \"\"\"\n",
    "    # Compute MLE with normal error model\n",
    "    ds = ds.copy()\n",
    "    mle_norm = rs.algorithms.merge(ds).stack_anomalous()\n",
    "    ds[\"IML\"] = mle_norm.loc[ds.index, \"I\"]\n",
    "    \n",
    "    # Observed intensities and error estimates\n",
    "    groupby = ds.groupby(['H', 'K', 'L'])\n",
    "    idx = groupby.ngroup().to_numpy()\n",
    "    I = torch.as_tensor(ds.I.to_numpy())\n",
    "    SigI = torch.as_tensor(ds.SIGI.to_numpy())\n",
    "    \n",
    "    # Initialize optimization at MLE with normal error model\n",
    "    mle = groupby.first()[\"IML\"].to_numpy()\n",
    "    mean = torch.tensor(mle, requires_grad=True)\n",
    "    \n",
    "    # Define loss function\n",
    "    def _evaluate_loss():\n",
    "        return -torch.sum(distribution(*args, loc=mean[idx], scale=SigI, **kwargs).log_prob(I))\n",
    "\n",
    "    # Setup and fit model\n",
    "    losses = []\n",
    "    opt = torch.optim.Adam([mean], lr=lr)    \n",
    "    for _ in tqdm(range(300), disable=not progress_bar):\n",
    "        opt.zero_grad()\n",
    "        loss = _evaluate_loss()\n",
    "        losses.append(loss.detach())\n",
    "        loss.backward()\n",
    "        opt.step()\n",
    "    grad = torch.autograd.grad(_evaluate_loss(), mean, create_graph=True)[0]\n",
    "    hess = torch.autograd.grad(grad.sum(), mean, create_graph=True)[0]\n",
    "    \n",
    "    # Package results\n",
    "    results = rs.DataSet({'I': mean.detach().numpy(), \n",
    "                          'SIGI': np.sqrt(1./hess.detach().numpy())},\n",
    "                         index=groupby.first().index, \n",
    "                         spacegroup=ds.spacegroup,\n",
    "                         cell=ds.cell, \n",
    "                         merged=True)\n",
    "    results.infer_mtz_dtypes(inplace=True)\n",
    "\n",
    "    if return_loss:\n",
    "        return results.unstack_anomalous(), losses\n",
    "    return results.unstack_anomalous()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This function must be passed a `torch.distribution.Distribution` to use as the error model. It then uses the [Adam optimizer](https://pytorch.org/docs/stable/optim.html#torch.optim.Adam) to minimize the negative log-likelihood and fit the merged intensities, $I^{ML}$. For stability, the model is initialized using the mean intensity values from `rs.algorithms.merge()`. The following cell fits the model using a [Student's _t_-distributed error model](https://pytorch.org/docs/stable/distributions.html#studentt) with `df=4.0`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "6cd5820834fa44d5b66d870ad7bd24e1",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/300 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "result1, loss1 = merge_mle(ds, torch.distributions.StudentT, 4.0, \n",
    "                           progress_bar=True, return_loss=True)\n",
    "\n",
    "# Plot loss function\n",
    "plt.plot(loss1)\n",
    "plt.xlabel(\"Iteration\")\n",
    "plt.ylabel(\"Loss\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>I(+)</th>\n",
       "      <th>SIGI(+)</th>\n",
       "      <th>I(-)</th>\n",
       "      <th>SIGI(-)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>H</th>\n",
       "      <th>K</th>\n",
       "      <th>L</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <th>14</th>\n",
       "      <th>9</th>\n",
       "      <td>13.383095</td>\n",
       "      <td>0.59039783</td>\n",
       "      <td>12.244447</td>\n",
       "      <td>0.5472484</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <th>24</th>\n",
       "      <th>1</th>\n",
       "      <td>481.62515</td>\n",
       "      <td>16.697405</td>\n",
       "      <td>487.13596</td>\n",
       "      <td>16.214811</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <th>13</th>\n",
       "      <th>7</th>\n",
       "      <td>62.35997</td>\n",
       "      <td>3.6021707</td>\n",
       "      <td>61.64068</td>\n",
       "      <td>3.1317017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <th>29</th>\n",
       "      <th>5</th>\n",
       "      <td>235.86664</td>\n",
       "      <td>8.579554</td>\n",
       "      <td>235.86664</td>\n",
       "      <td>8.579554</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <th>14</th>\n",
       "      <th>5</th>\n",
       "      <td>174.9836</td>\n",
       "      <td>5.340581</td>\n",
       "      <td>189.3732</td>\n",
       "      <td>4.8809543</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             I(+)    SIGI(+)      I(-)   SIGI(-)\n",
       "H  K  L                                         \n",
       "18 14 9 13.383095 0.59039783 12.244447 0.5472484\n",
       "25 24 1 481.62515  16.697405 487.13596 16.214811\n",
       "39 13 7  62.35997  3.6021707  61.64068 3.1317017\n",
       "29 29 5 235.86664   8.579554 235.86664  8.579554\n",
       "30 14 5  174.9836   5.340581  189.3732 4.8809543"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result1.sample(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As a sanity check we can test this implementation by passing the normal distribution as the error model. In this case, the initial values should match the maximum likelihood estimate and optimization should not change the estimates. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "df1d4a7dda514a0d84aef6c962136263",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/300 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA0wAAAF4CAYAAABn6XklAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAABU+0lEQVR4nO3de5yc8/3//8cz2SQOQVJxbMI6FO2XClFBSx1LHVulpUXyqxafCqVK0WpWiyp1aGm1KkpL0YOSljhTcVqnIHEOlnWIFFkShySbvH5/XNcyGTO7s7uzc83MPu+329x2r/f1nut6vTO7mX3N+6SIwMzMzMzMzD5uQNYBmJmZmZmZVSsnTGZmZmZmZkU4YTIzMzMzMyvCCZOZmZmZmVkRTpjMzMzMzMyKcMJkZmZmZmZWhBMm67ckNUlqzzqOQiRtKymKPL6QUUxHSdqzQPklkmZmEZOZmZlZX2vIOgAz69ShwGN5ZY9nEQhwFHALMDmv/OfAchWPxszMzKwCnDCZVbcnIuK+rIPoTEQ8l3UMZmZmZn3FQ/LMOiFppKQrJL0l6X1J90v6cl6dT0v6t6Q30jovSDo/5/wnJf1V0ixJH0hqlfR3ST3+/ZM0XlIUKF9ieFxHPUmbSfqHpHmSXkqHIw7Ie+56kv6W044nJX0/PdcCrAkcnDM0sKnQPbvx73aJpJmSxkq6T9J7kp6QtHdP/13MzMzMys09TGZFSFoOuANYBvgB8D/g/4D/SNo1Im5Mq/4nPfddYA5JYrFFzqX+DIwEjgZeBVYHdgNUQhgDJeX+nkZELOpBcy5P4/g98GVgItACXAIgaV2gOW3HscCLwHrA2unzvwpcD9wP/CIte7nQjbrx7wawIvAn4EzgFZJ/o79J2iAiPC/KzMzMMueEqYckbUPyh+UYYDVg/4i4sgfXWYfkD9AdgaWB54DDIuKuMoZrPTMeWAfYPCIeAJA0BZgBnAzcKGkESVJxdETkzu25NOf7scCJEXFFTlnu9525I+/4v8C2JT4316SIOCP9/hZJOwFfJ02YgCaSBG6riHgjLbut48kRMU3SfOB/JQwRHE8X/245dYcBO0fE/Wm9acAsYG/gDMzMzMwy5oSp55YFHgUuBq7uyQUkrQncB0wBdiH5JH4d4I3OnmcVsw0ws+OPfoCIWCzpb8BJkpYC3iTpqTk9TZ5ui4iWvOs8CBwraTFwS0Q81Y0YvkPyc9ZhbvebASQ/Y7keBzbKOd4R+FdOstQbXf67RcQH6am3OpKltN7/JM0G1ihDHGZmZma95jlMPRQRUyLiJxHxr2J1JB0g6bF03spzkn4maXBOldOAZyLioIi4PyJeiIju/kFtfWc4SW9HvlkkvzsrREQAOwHTgLOAF9J5OF/Nqf8NkuFsPwGelNQi6bASY3g6Ih7MeTzdw7bMyTueDyyVc7wiyZC4cujy362TuArFZmZmZpYZJ0x9RNK3gXNJhtt9hmR56G+SLMFMOuF+D6BZ0lWSZkt6RNIESaXMbbG+NwdYtUD5qsBi4G2AiJgZEd8CRpAMv3sW+Luk9dLzr0fEoSRDNzcGbgYukLR9L2L7ACAvAYck8emJN4BP9iKeXCX9u5mZmZnVAidMfWci8KOIuCIino+IW4ATgMPThGhlkr1rvgc8D+wMnAf8Ejg8o5htSXcC60oa01GQJrr7Ag/kDCsDICIWpcPLTgIGAhvknY+IeAw4Ji3asBexvZR/DUnDgK16eL1bgK9I+kQndUrt+enWv5uZmZlZNfMcpj4gaSWSORjnSfp1zqkBJAs75H76/nBEnJB+P03S+iQJ0/lYJUjSPgXKnyJZve37wGRJJ5L0whxGkgjtmj75s8A5wFUkC3YsBRxJ0ovSLGkFkh6ly9JrAowDFvLxBR26437gBeCPkiYCQ4DjgHk9vF4TsDtwj6TTSVbJWwf4VET8KK3zJLCtpF1I/i1ejYhXC1yry383MzMzs1rhhKlvdPTcTSD5tD3f/0hWJGsHnsg79yTuYaqkAcDfC5T/MiKOl7QtyZLX55Iku48Be+QsjT2LZO7PcSRD2t4FHgB2iojXJQ0BHiFZVnsNkkTpMWD3tLepRyKiXdJewO9IkrXXSIZ7bgd8oQfXe07SliTz6s4hSfxeAC7IqXYC8Nv0fsuTrHjXVOBa80r4dzMzMzOrCUrmrFtvpBuILrGsuKRW4C8RcWInz7sbWBwRW+eU/QLYMyL+X1/GbGZmZmZmXXMPUw9JGgqsm1O0pqTRwLx0w82fAH+Q9DbQsT/PhsDnIuK49Ph0kmFLPyb51H5Tkt6l4zAzMzMzs8y5h6mH0iFHtxc49d+I2Dat8zXgRyT73cwnWT3t0oj4cH6SpG+RJFdrkQyBOg+4IPzCmJmZmZllzgmTmZlZRiQNJNnc+pWI2D3reMzM7OMyHZIn6SDgUuDGiNilk3q/AT5PMqTthYjYoEi9HUgmoW8KLOKjieZz8uoNAG4CdiBv7lEX8Q4BPkcywX5RKc8xM+vHBpLsP/ZARMzPOpgq9X2SxX6WL/UJfi8yM+uWXr8XZZYwpctnn07hVeQKuZhkU9DNi1xvD5J5QKeQLGG8kGQoXHuB6icA73czZEjeoKb24HlmZv3Z1sBdWQdRbSSNBHYDTgV+0I2n+r3IzKz7evxelEnClH46dhXJ4gY7suS+RB8TEUemz1uJAglTOqThfOCciDgt59QzBep+gSSh2hSY3c3QXwOYOnUqI0eO7OZTzcz6l5dffpmtt94a0v8764WkbYBjgTEkn1oWHKkgaU+SZGg9ks2mfxERF+dUOZfkfXC5bobg9yIzsxKV470oqx6ms4HpEXGZpB3LcL1NSfa4eU3SXSRvTk8DTRFxa0clSZ8ALge+HRH/k1T0gpKGAcPyilcDGDlyJI2NjWUI28ysX6i3YWPLAo+SjHy4ulAFSWPTc6cAV5J8OHihpLci4hpJuwOzI+KhdBGhgvxeZGZWNj1+L6p4wiRpb2BnYJMyXnad9OvJJJ/6TQP2A26UNCYiHk3P/wn4W0TcXMI1jwImljFGMzOrAxExBZgC0MkHb0cDUyOiKT1+Kk2ijgWuIZmXu6ekXUk2il5e0mURcUDedY7C70VmZpkaUMmbSRoF/B74VkTMLeel069/iIiLI2JaRPwIeJhk+B2SJgCfBH5c4jXPJVnqO/exdWdPMDMzS21FsrhQrhuAz0kaFBEnRMTIiGgk+YDvtgLJEvi9yMwsc5XuYRoDrATcnfOp3AAASe3A2Ih4qAfX7RiT+ERe+ZMkQ/UgGQ6xCfBe3ieCl0s6PiJG5xZGRBvQllvW2RA+MzOzHKsCr+eVzQIGASMocSy934vMzLJX6YTpVpKV63KdQvLmcRgws4fXfQj4AFg/r3w9kl4mgCNJNojNNZ1kY9lrenhfMzOzXomIO4A7OqsjqQkPzTMzy0RFE6Z0GN6M3DJJbcBSETEjPZ4ATMjda0nSusBQkk/shkganZ6aGRHzImKupN8CR0p6jGQO0/4kPVqHpPd+KT+e9FO6lyOip4mamZlZIbOAVfLKViHZ6uKN7l4snQvVBCCpEXihV9GZmVnJMt24togRfLyn6CLgiznH09Kv2/HRp3LHAwuAX5NsADgd2DkipvdZpGZmZoXdA+wE/CKnbBfg/ohY2N2LuYfJzCw7mSdMETE+77iJ9FO0nLJtS7hOO3Bi+ij13h4IbmZm3SJpKLBuTtGa6ciHeTkjFs4hma/7U5J9B3cAvgns05N7uofJzCw7FV0lz8zMrA5sRjLSoWO0w+np9xd1VIiIZuBrwNdJRjwcAxwaEddUNFIzM+u1zHuYzMzMakm6SEOXIxQi4lrg2nLc00PyzMyy4x4mMzOzKhcRTRGhdCj5WlnHY2ZWKZMnT+aoo45i8uTJmcXghMnMzMzMzKpKa2srX/va19h777254IILOPDAAzNLmpwwmZmZVTlJTZJCUuAFH8yszk2aNImNNtqIq6++mkWLFrFgwQI++OADbrvttkziccJkZmZW5Twkz8z6i8mTJ/Pd736Xt99+e4nyxYsXs/3222cSkxMmMzMzMzPL3OTJk/nGN75BRHzs3GGHHcaee+6ZQVReJc/MzMzMzDK20UYbMWPGjILnxo0bx3nnnVfhiD7ihMnMzKzKeVlxM6tnSy21FPPnzy94btddd+WSSy6pbEB5PCTPzMysynkOk5nVK0lFk6Utt9yS6667rsIRfZwTJjMzMzMzq6jm5mak4nuAT5gwgXvuuaeCERXnhMnMzMzMzCpm0qRJbLHFFkXPn3HGGZnOWcrnhMnMzMzMzCriiCOO4Dvf+U7R8+PGjePYY4+tYERd86IPZmZmVc6LPphZPVhllVWYPXt20fMnnngip556agUjKo0TJjMzsyoXEU1AE4CkRuCFDMMxM+u2QYMG0d7eXvT8fffdx9ixYysYUemcMJmZmZmZWZ/pbHEHoOBGtdXEc5jMzMzMzKxP1HqyBE6YzMzMzMysD9RDsgROmMzMzMzMrIy23377ukmWwHOYzMzMqp5XyTOzWjF48GAWLlxY9PyAAQNYtGhRBSPqPfcwmZmZVbmIaIoIRYSAtbKOx8ysEEmdJktrrbVWzSVL4ITJzMzMzMx6qasheNdeey3PP/98haIpLw/JMzMzMzOzHqun+UqFuIfJzMzMzMx6pN6TJXDCZGZmZmZmPdAfkiVwwmRmZmZmZt2w77779ptkCTyHyczMzMzMSjRgwIAuk6F6SpbAPUxmZmZVT1KTpJAUwAtZx2Nm/ZOkTpOhhoaGukuWwAmTmZlZ1fM+TGaWta6G4O2zzz6d7sFUyzwkz8zMzMzMiupP85UKybSHSdJB6RCDG7qo9xtJD0maL+mpTurtIGmqpHclvSPpLknD03NrSLpQ0kxJ70t6UdJ5HefNzMzMzGxJ/T1ZggwTJknrA6cDd5b4lIuBqzq53h7Av4EpwObAZsA5QHtaZX1gaeAIYEPg28CXgCt6EL6ZmZmZWV1zspTIZEiepCEkyc9xwI7Aqp3Vj4gj0+etRJIM5V9vIHA+cE5EnJZz6pmca9wM3Jxz7jlJxwLXSFo+It7pYXPMzMzMzOrGVlttxb333ttpnf6SLEF2c5jOBqZHxGWSdizD9TYF1gBek3QXsB7wNNAUEbd28rxhwHzgvfwTkoal53ONLEOsZmZmZmZVqateJehfyRJkkDBJ2hvYGdikjJddJ/16MnAsMA3YD7hR0piIeLRAHCOAnwEXRkR7/nngKGBiGWM0MzMzM6taTpYKq2jCJGkU8Htgj4iYW85Lp1//EBEXp99Pk7QdcBjwf3lxDCOZ6/QsybDAQs4FLskrGwlM7X24ZmZmZmbVo6tkafDgwcyfP79C0VSXSi/6MAZYCbhbUrukduAg4Evp8ZgeXve19OsTeeVPkgzV+5CkFYFbgTnAnhFR8JWPiLaIaMl9AC/3MD4zMzMzs6rUVbI0bty4fpssQeWH5N0KbJRXdgowgqQnaGYPr/sQ8AHJSni51gMe7jiQtApwC/AK8JWI+KCH9zMzM+sxSUuRrBI7hOS9+B8R4WHgZlZxXgmvaxVNmNJheDNyyyS1AUtFxIz0eAIwISI2yKmzLjCUZDW9IZJGp6dmRsS8iJgr6bfAkZIeI5nDtD9Jj9Yh6TVWB24j6Vk6FBiW8wPyVkQsKH+LzczMCpoPbB8R8yQNAu6SNCUi7ss6MDPrP5wslSarVfI6M4KP9xRdBHwx53ha+nU74I70++OBBcCvgeWB6cDOETE9Pf+lnOu25F0/9zpmZmZ9KpK/Qualh4PSh/8yMbOKGD9+PJdeemmndZwsfSSzjWs7RMT4iNgl57gpIpRXZ9uIUIHHHTl12iPixIhYPSKGRsSWEXF7zvlLilxjieuYmZl1RtI2kv4t6VVJIWm/IvX2lDRd0nxJz0r6dt75gZIeAWYDN0dEcwXCN7N+TpKTpW7KPGEyMzOrMcsCjwKHF6sgaSxwNfBPYGOS0Q8XSvpKR52IWBQRo0lWYN1c0oYFrjNMUmPuA+8JaGY95GXDe6Yah+SZmZlVrYiYQrI1RWd/fBwNTI2IpvT4qTSJOha4Ju96bZJuB3Yhb54v3hPQzMrEyVLPuYfJzMys/LYCbsoruwH4nKRBklZK9wRE0tLATsBTBa5zLrBW3mPrPorZzOpUKcuGO1kqzj1MZmZm5bcq8Hpe2SySxR1GkOxJeKmkgSQfXv4tIv6Tf5GIaAPaJDXhniYz6wGvhNd7TpjMzMwqLCIeAzbpRv0moAkgncf0Ql/EZWb1xclSeXhInpmZWfnNAlbJK1sFaAfeqHw4Ztaf7Lbbbk6Wysg9TGZmZuV3D8m8pF/klO0C3B8RC7t7MQ/JM7NSeXGH8nMPk5mZWTdIGipptKTRadGa6fG6OdXOAbaR9FNJ60v6HvBN4Mye3LNjj8J0n8K1etUAM6tbTpb6hhMmMzOz7tkMmJY+AE5Pv7+oo0K6Ce3XgK8D04FjgEMj4pqKRmpm/YaTpb7jIXlmZmbdEBF3AF3+ZRIR1wLXluOeHpJnZp3pKllab731ePrppysUTf1xD5OZmVmV85A8MyumlMUdnCz1jhMmMzMzM7Ma5JXwKsMJk5mZWZWT1CQpJAXeg8ms32tubnayVEGew2RmZlblvHGtmXUYNGgQ7e3tndZxslReTpjMzMzMzGqAV8LLhofkmZmZmZlVOSdL2XHCZGZmVuU8h8msf+sqWRo6dKiTpT7khMnMzKzKeVlxs/6rlMUd5s6dW6Fo+icnTGZmZmZmVcgr4VUHJ0xmZmZmZlXGyVL1cMJkZmZmZlYlRowY4WSpyjhhMjMzq3Je9MGsf5DEm2++2WkdJ0uV54TJzMysynnRB7P652XDq5cTJjMzMzOzDHWVLK222mpOljLUkHUAZmZmZmb9lecrVT/3MJmZmZmZZcDJUm1wwmRmZmZmVmFOlmqHEyYzM7Mq51XyzOqHlw2vPU6YzMzMqpxXyTOrD142vDY5YTIzMzMz62NeNrx2OWEyMzMzM+tDTpZqW6YJk6SD0jHZN3RR7zeSHpI0X9JTndTbQdJUSe9KekfSXZKG55wfLOlsSbMlvS/pFkkblLNNZmZmZmYdukqWxo0b52SpymW2D5Ok9YHTgTtLfMrFwFhg8yLX2wO4CjgFOAxYCGwEtOdUOwv4OjAOeAX4GXCzpE9HxLweNMPMzMzMrCAv7lAfMkmYJA0hSW6OA3YEVu2sfkQcmT5vJQokTJIGAucD50TEaTmnnsmpszxwCHBIRExJyw4EXgf2B/6Yd81hwLC8W43ssnFmZmZm1u85WaofWQ3JOxuYHhGXlel6mwJrAK+lw/Bmp0PzdsipsxkwGLipoyAi5gJ3A58vcM2jSJZuzX1MLVO8ZmZmZlaHhg8f7mSpzlQ8YZK0N7Az8L0yXnad9OvJJEP3dgbuAW6UtHF6blUggNl5z50FrFbgmueSLN2a+9i6jDGbmZmVxPswmdUGSbS1tXVax8lS7anokDxJo4DfA3ukvTtlu3T69Q8RcXH6/TRJ25HMZ/q/7l4wItqAtiVuUsIKJ2ZmZuUWEU1AE4CkRpw0mVUdr4RXvyo9h2kMsBJwd84P1QAASe3A2Ih4qAfXfS39+kRe+ZMkQ/Ug6UkSsHJOfYBVgFd7cE8zMzMzMydLda7SQ/JuJVm5bnTOYzLJ8LnRwOM9vO5DwAfA+nnl6wEt6fcPAguAnTpOShpKMn/p7h7e18zMzMz6sa6SpS233NLJUo2raA9TOgxvRm6ZpDZgqYiYkR5PACZExAY5ddYFhpLMQxoiaXR6amZEzIuIuZJ+Cxwp6TFgGsnKd2NIVsYjIt6RdCHwS0mzSXqVTgbeAq7ooyabmZmZWZ3y4g79Q2b7MHViBB/vKboI+GLO8bT063bAHen3x5P0IP0aWB6YDuwcEdNznncMyb5MfyFJwO4BdvIeTGZmZmbWHU6W+o/ME6aIGJ933EQ6sTWnbNsSrtMOnJg+itVZABydPszMzMzMumX99dfnmWee6bSOk6X6knnCZGZmZmZWC7y4Q/+U1ca1ZmZmZmY1w8lS/+WEyczMrMIkjZJ0u6QnJD0u6ftZx2RmxTlZ6t+cMJmZmVVeO3BMRHwG2AI4XNJnMo7JzAroKlnaddddnSzVOc9hMjMzq7CIeI10E/V0a4wngU/y8Q3YzSxDXgnPwD1MZmZWoyStJGk/SedK+pukf0v6k6TjJW3Vh/fdJr3Xq5JC0n5F6u0pabqk+ZKelfTtIvUagU2A5r6K2cy6z8mSdXDCZGZmNSVNWP4FvAz8FfgKsDYwHNgc+DFwl6QXJZ0kafkyh7As8ChweCcxjgWuBv4JbEyyR+CFkr6SV29oWueoiHinzHGaWQ+ceeaZTpZsCR6SZ2ZmNUPSFGBr4Brga8DdETEnr46AzwC7A/sDR0o6KCKmlCOG9DpT0nsVq3Y0MDXdWxDgqTSJOjaNHUmDSJKlyyPi6kIXkTQMGJZXPLLHwZtZp7y4gxXihMnMzGrJw8ABEfFmsQqR/DXzePr4paQvkfQKVdJWwAV5ZTcAf0oTpXZgEvBkRJzdyXWOAib2SYRmtgQnS1aMEyYzM6sZEfHjHjznpr6IpQurAq/nlc0CBgEjgHWAA4Hpkh5Jz58YEdfnPedc4JK8spHA1DLGatbvOVmyzjhhMjMzq7CIuAvo8i+0iGgD2iQ14Z4msz7RVbI0dOhQ5s6dW6ForBo5YTIzs5olaW1gb2ANYKm80xERh1Y+KiDpTVolr2wVkqF4b3T3YulcqCb4cFW9F3oVnZkBXgnPSuOEyczMapKkrwJXkaz4OhuYn1cly7907gF2An6RU7YLcH9ELMwmJDPL5WTJSuVlxc3MrFadAtwCrBoRq0fEWnmPtfvippKGShotaXRatGZ6vG5OtXOAbST9VNL6kr4HfBM4s4f3bEr3fArcu2TWK83NzU6WrFucMJmZWa1qBM6OiG4PceulzYBp6QPg9PT7izoqREQzybLnXwemA8cAh0bENT25YUQ0RYQiQsBaPQ/drH+TxBZbbNFpHSdLls9D8szMrFY9Bnyy0jeNiDsobcGGa4Fry3FPL/pg1nteCc96yj1MZmZWq74PHCtpTNaB9DX3MJn1jpMl6w33MJmZWc2Q9CxLLuYwArhf0lvAnLzqERHrVyw4M6tKXSVLQ4YM4YMPPqhQNFaLnDCZmVktuZtsV78zsxrixR2sHJwwmZlZzYiI8VnHkAXPYTLrPidLVi6ew2RmZjVJ0jckHVvk3A8l7VvpmPqK5zCZdY+TJSsnJ0xmZlarjgcWFDn3QXrezPqRpZde2smSlZ2H5JmZWa36FMkeR4U8np43s37CK+FZX3EPk5mZ1aqFJKvkFbIydbQ4hKQmSSEpgBeyjses2jhZsr7khMnMzGrVPcAPJC0xWiI9Pgq4N4ug+oLnMJkV52TJ+pqH5JmZWa1qAu4EnpR0KfAq8EngAGANYJvsQjOzSugqWXrppZcYNWpUhaKxeuWEyczMalJEPCBpB+AMkuRpALCYpOdpXEQ8kGF4ZtbHvLiDVYoTJjMzq1kRcQ/wBUlLA8OBORHxfsZhlZ33YTJbkpMlqyTPYTIzs5ojabCk70vaECAi3o+IV+sxWQLPYTLrMHz4cCdLVnFOmMzMrOZExALgdOATWcdiZpUhiba2tk7rOFmyvpBpwiTpoHSZ1Bu6qPcbSQ9Jmi/pqSJ1WjqWXM15XJZXp1HS3yXNlvSupIclfb2cbTIzs4qZDqyXdRBm1ve8Ep5lKbOESdL6JJ8O3lniUy4GruqizqnAajmPw/POXwusBHwZ2Aj4F3ClpLElxmBmZtXjOOAESV/MOhAz6ztdJUsrrriikyXrU5kkTJKGkCQ/x1HCBnwRcWRE/BZ4vouq8yJiVs7j7Zx7DgU+C5wVEQ9FxPMR8XNgDrBZjxtjZmZZ+SPJkLzbJL0j6VlJz+Q8ns46QDPrna6SpYsuuog33nijQtFYf5XVKnlnA9Mj4jJJO5bxukdJOpZkL47rgFMiYh5ARMyT9CjwLUl3AnOBrwNLA7fmX0jSMGBYXvHIMsZqZma9czfQLz5W9ip51h95cQerFhVPmCTtDewMbFLmS58HPALMTq99GjAa2CWnzs7A34E2oB14D9g7IgrNizoKvzmZmVWtiBifdQyVEhFNJHtNIamREkZnmNUyJ0tWTSqaMEkaBfwe2CMi5pbz2hFxVs7hdEkvAHdK2iQipin5zfstSaK0LfA2sDdwlaQvRsQjeZc8F7gkr2wkMLWccZuZWc+l+y8dCGxDsg/TWyRzY/8SER9kGZuZdd/qq6/Oa6+91mkdJ0tWaZXuYRpDsujC3TmfHAwAkNQOjI2Ih8p0r/tIhmqsB0wDtgO+BqwcEf9L6zwi6fMkvUnjc58cEW0kPVEfKmWFFjMzqwxJqwK3A+sDLwKzgM8A3wJ+IGm7iJiVYYhm1g1eCc+qVaUXfbiVZHW60TmPycA96fePl/FeowEBHR9TLJt+XZRXb1Faz8zMasuZJHNNt4qItSJiy4hYC9gKWB44I8vgzKx0TpasmlW0hykdhjcjt0xSG7BURMxIjycAEyJig5w66wJDgVWBIZJGp6dmpos5bAlsSfJJ4xxgY5KFJR4A7krr3gP8D/iLpJOAd0iG5O2YfjUzs9ryZeCYiLgvtzAi7pP0Y+BX2YRlZt3hZMmqXaYb1xYxgmR4Ra6LSIbVHQo0pt9P46PlwOcD+wK3AU+RfOp4NfCliFgMEBFvAl9K699IskDEN4H/LyKu6ZOWmJlZX1qWZKGfQl4HlqlgLGbWA10lS7vuuquTJctct3uYJClyfnIlbQtsCNzR0UvUHfmrHOWuBJRTtm0X13iYpIepq3s9AuzWvQjNzKxKTQcOAaYUOHcIeSMazKy6eCU8qxXdSpgkXUXSm3NQenwocEF6eoGk3SLiY3samZmZ9YGfAdeme+xdSbLow6oke+xtBOyVYWxm1gknS1ZLujskb0uSDWE7HE+y0/oKwD+Bk8oUl5mZWaci4j/AniTbRZwCTEq/LgL2jIjrOnl6TZHUJCkkBd6DyWrYmWee6WTJak53h+StBLwKIGl9YE3gvIiYK+kS4KryhmdmZlZcmhRdJ2lZkhXz2iLi3WyjKj9vXGv1oKGhgUWL8hcrXpKTJatG3e1hagNWS7/fEZiVN29pUDmCMjMzK0TSxZLWyi+PiHcj4pV6TJbM6oEkJ0tWs7qbMN0OnJwu/X0ccG3OuQ2Al8oVmJmZWQHjSUY7mFmN6GoIXkNDg5Mlq2rdTZh+SDIk7xfA88BPc84dAEwtU1xmZmZmVuO6SpbGjRvHwoULKxSNWc90aw5TRLwK7FDk9E7AB72OyMzMrHP+KNqsBnhxB6sX3d6HKZ+kdUmG4zVHxDu9D8nMzKxTP5X0vxLqRUQc3OfRmNnHOFmyetLdfZh+AwyMiMPT468Af0uv0yZpp4h4qOxRmpmZfWRjkj0Bu+K/yMwqbPLkyey1V+dboDlZslrT3R6m3YGJOcenkuzL9FPgVySbCO5WntDMzMwK2ici7s86CDNb0r777ss//vGPTus4WbJa1N2EaVXgRQBJawKfBsZFxPS09+lPZY7PzMysLkm6mOSDyNkRsWHW8Zj1xsCBA1m8eHGndZwsWa3q7ip575JsDAiwPTAH6BiC9z6wbHnCMjMzq3uXALtkHYRZb0nqNFkaPHiwkyWrad1NmO4Djpe0O3AMcH189BuwDvBKOYMzMzOrVxFxJ/BW1nGY9UZXiztst912zJ9fypRDs+rV3YTpWGAVYDKwDEvOZ/oGcE+Z4jIzM/uYiBjQMX9J0gWSRlc6BknbSPq3pFclhaT9itTbU9J0SfMlPSvp25WO1awvlbIS3m233VahaMz6TrcSpoh4KiLWAVaKiLUj4vmc00eTJFRmZmaV8GXgIUkPSjpE0nIVuu+ywKPA4cUqSBoLXA38k2RVv18DF6ary5rVPC8bbv1Jj/Zhiog3JQ0GVgDejogFETG9vKGZmZl1ai3gS8B3gfOAsyRdBVwUEff11U0jYgowBTr9o/FoYGpENKXHT6VJ1LHANaXeS9IwPpo73GFkycGa9QEnS9bfdHdIHpJ2knQPyQIQs4B3Jd0taceyR2dmZlZEJG6MiH1IkoifA1sDd0t6TNIRkoZnFN5WwE15ZTcAn5M0qBvXOQp4Ie8xtRwBmnXXEUcc4WTJ+qVuJUySdiH5VG0F4BTgeyR7MQ0DpkjaudwBmpmZdSUi/hcRZwC7AncBG5IMg3tZ0u8krVDhkFYFXs8rmwUMAkYASLoCuBdYX9LLkg4ucJ1zSXrSch9b91HMZkWNGDGC888/v9M6TpasXnV3SN7JwPXAXjmr4yHpZJKFIE4GbixfeGZmZp1Le2y+SjI0bzugFfgJyRyi3YEfAWtSZRurR8T+JdRpA9okNbHkQktmFTN48GAWLlxY9PzQoUOZO3duBSMyq6zuDsnbCLgg8j5CSI8vAD5brsDMzMw6I2kDSb8i2dLicuA9YA9g7Yg4LV2o6FckidT2FQ5vFsmqsrlWAdqBN7p7sYhoighFhEh6mcwqQlKnydK4ceOcLFnd624P0/ukQwkKGJGeNzMzq4QngFeB35Es9PBykXpPk+wjWEn3ADsBv8gp2wW4PyKK//VZhHuYLAuer2SW6G4P003ALyRtmlsoaROSuUw3lCswMzOzLnwVWDPtfSmWLBERT0bEduW6qaShkkbn7AG1Znq8bk61c4BtJP1U0vqSvgd8EzizJ/d0D5NVmpMls490N2H6IfAB8ICkpyX9V9LTwIMkvUveh8nMzCoiIq6NiEUZ3HozYFr6ADg9/f6inNiaga8BXwemA8cAh0bENRWN1KwHnCyZLam7G9e+AowmWeb0UWBB+vX7JJ/0TShveGZmZkuStIOkayVNl3SDpG9X8v4RcUdHb0/eY9u8etdGxIYRMTgi1omIST29p6QmSSEpSJYWNyu7SZMmOVkyK6DbG9dGxDySDQLPyy2X9DWSlYhOLE9oZmZmS5K0K/Af4G3gGZLFhnaStHpEnJJpcH0o3QC3CUBSI06arMzGjBnDww8/XPR8Q0NDp4s/mNWzbm9ca2ZmlqETgDuBNSJiLDAK+CNwnCS/p5n1wCqrrNJpsrTyyis7WbJ+zW8uZmZWSz4NnBURcwHSOUw/A4YCa2QZWF/ykDzrK4MHD2b27NlFz48bN47XX8/fg9msf+n2kDwzM7MMfQLI/+ut43g40FLRaCrEQ/KsL3i+kllp3MNkZma1xn/FmfWSkyWz0nXZwyRpIaW9OXX+m2dmZlYedxf5Y685rzwiYkhlQjKrHZ0lSwMHDqS9vb2C0ZhVv1KG5J1KH32aJ+kg4FLgxojYpZN6vwE+D2wIvBARGxSo0wKsmVd8eUQckFdvB5JhDZsCi4DHgD0iYk7PW2JmZhVyctYBZEFSEzAx6zistk2aNInvfOc7Rc97JTyzwrpMmNJx02UnaX2Szf7uLPEpFwNjgc07qXMqcH7O8ft599wDuAo4BTgMWAhsBPijFDOzGhAR/TJh8hwm663x48dz6aWXFj3vZMmsuEwWfZA0hCRxOQ7YEVi1s/oRcWT6vJXoPGGaFxGzitxzIEkydU5EnJZz6pluhG5mZmZWU0aMGMGbb75Z9Pxaa63F888/X8GIzGpLVos+nA1Mj4jLynzdoyS9me7+frqkoTnnNiVZcvY1SXdJmi1pajpE72MkDZPUmPsARpY5XjMz6wZJf5K0TjfqD5A0Ph0CbtbvDBkypNNk6YwzznCyZNaFivcwSdob2BnYpMyXPg94BJidXvs0YDTQMTeq4w32ZOBYYBqwH3CjpDER8Wje9Y7C48XNzKrNYuAJSXcCVwD3RMRTuRUkDQc2A3YDvg68C4yvcJxmmVt22WVZsGBB0fNeCc+sNBVNmCSNAn5PssjC3HJeOyLOyjmcLukF4E5Jm0TEND5axe8PEXFx+v00SduRzGf6v7xLngtcklc2EphazrjNzKx0EXGwpLNIPtQ6BxgqaQEwB5gPDAOWJ/k/fxrwU+DSiKjpyRle9MG6q6GhgUWLFhU972TJrHSV7mEaA6zEkkvCDgCQ1A6MjYiHynSv+0hW91uP5E3ztbT8ibx6T1Jgd/iIaAPacsu62rPAzMz6XkQ8ARwi6UhgS5K5rasBSwFvAU8Dd0XEc9lFWV5e9MG6w3ssmZVXpROmW0lWpct1CjCCpJdnZhnvNZrkE8aOROkh4ANg/bx66wEPl/G+ZmZWARHxAXB7+jDr93784x9z2mmnFT2/4oor8sYbb1QwIrP6UNGEKR2GNyO3TFIbsFREzEiPJwATcvdakrQuMJRkNb0hkkanp2ZGxDxJW5J8yng7ybCMjUkWlngAuKvj3pJ+Cxwp6TGSXqf9SXq9DumTBpuZmZlVwG677cb1119f9PzKK6/M66+/XsGIzOpHJsuKd2EEH+8Fugj4Ys7xtPTrdsAdJOPW9wVOApYGXgKuBk6NiMU5zzseWAD8mmSM+3Rg54iYXt4mmJmZmVXG+PHjO02WNtxwQ6ZP9586Zj2VecIUEePzjptIx2nnlG3bxTUeJulh6upe7cCJ6cPMzMyspo0ZM4aHHy4+s2DChAmcd955FYzIrP5knjCZmZlZ57xKnhWy3HLLMW/evKLn77vvPsaOHVvBiMzqkxMmMzOzKudV8izfUkstxfz584ue90p4ZuUzIOsAzMzMekPSTlnHYFZJK6ywQtFkacCAAU6WzMrMCZOZmdW6P2QdgFkltLa2MmTIEN55552C54cOHdrpZrVm1jNOmMzMrNZ5V3Grez/+8Y9ZY401WLBgQcHzo0aNYu7cuRWOyqx/8BwmMzOrepIeJtlkfFr6eDQi3k1Pe/yR1bXtt9+e228vvj/zdtttx2233VbBiMz6F/cwmZlZLTgWeArYimRvvrckPSXpSmB4ppGZ9aGukqUTTzzRyZJZH3MPk5mZVb2IuBW4teNY0jLAZ4FNgMITOsxq3EYbbcSMGTOKnvey4WaV4YTJzMyqnqSBEfHhbPaIeA+4L32Y1Z2u9ljySnhmleOEyczMasE8STNI5i91zGV6NCI+yDasyvDGtf1LQ0ND0dXuhgwZwgcf9Isfe7Oq4TlMZmZWC54jWQ3vFWAL4I/AHEkzJP0508gqICKaIkIRIWCtrOOxvjNkyJCiydKKK67oZMksA06YzMysFnwWuBjYH3iQZO7SMODbwF3ZhWVWHpMnT0ZS0WXD11tvPd54440KR2Vm4ITJzMxqQEQsjojfkfQuNQIPAdtHxP0RcWGmwZn10o9//GP22muvouf32Wcfnn766QpGZGa5nDCZmVnNiIg2krk8vwL+KumwbCMy6519992X0047rej5CRMm8Pe//72CEZlZPi/6YGZmVU/SL4ANgU8D84HpwBnAHRmGZdYrW221Fffee2/R82eccQbHHntsBSMys0KcMJmZWS34EckwvF+TzFmaERELsw3JrOfGjBnDww8/XPDc4MGDmT9/foUjMrNiPCTPzMxqwfbAX4HNgb8AbZKmSbpY0pHZhmbWPWussUbRZGnTTTd1smRWZdzDZGZmVS8i7iBn+J2kpUlWztuUZMU8s5qw9tpr09raWvDcrrvuynXXXVfhiMysK+5hMjOzmiFpZYCIeD8imiPigog4JOu4ekLSLpKeljRT0vFZx2N9b6ONNuKFF14oeG7cuHFOlsyqlBMmMzOrJbMkvSppiqTTJe0n6dOSaur9TNJA4LfAl4HPAPtL+ky2UVlfOeKIIxgyZAgzZswoeH7cuHFccskllQ3KzErmIXlmZlZLjiMZircxybymQUAAH0h6HHg0fTwCPBYR72QUZ1c2B2ZGxPMAkq4E9gKeyDQqK7vOVsIbMGAAp59+ulfCM6tyTpjMzKxmRMSvOr6XNJikd2ZjYHT6dW/g4I7qwMByxyBpG+BYYAywGrB/RFxZoN6ewKnAesBLwC8i4uL09CeB3IksLwNjyx2rZeuII44omiyttdZa/Pe//2XUqFEVjsrMussJk5mZ1aSIWEDSk/QIcGlHuaRRJAnUZ/vo1suS9GJdDFxdqIKksem5U4ArgR2BCyW9FRHXlHojScOAYXnFI7sdsVXcEUccwfnnn1/w3KabbspDDz1U4YjMrKecMJmZWV2JiFaS3pt/99H1pwBTACQVq3Y0MDUimtLjp9Ik6ljgGuAVILdrYWRalu8oYGJvY7bK6ixZ2mefffj73/9e4YjMrDdqapKsmZlZjdgKuCmv7Abgc5IGAQ8An5K0Vjq0cD9gcoHrnAuslffYuq+Ctt7bd999iyZLW265pZMlsxrkHiYzM7PyWxV4Pa9sFskiFSMi4jVJE4AbSeZZXRwRj+dfJCLagLbcsk56tSxDra2t7LDDDjz77LMFz2+33XbcdtttFY7KzMrBPUxmZmYZiIjrI2K9iFgnIk7trK6kJkkhKYDCG/lYZiZNmsTGG29cMFkaOHAgZ5xxhpMlsxrmhMnMzKz8ZgGr5JWtArQDb3T3YhHRFBGKCJEMy7MqceaZZ3LooYcyZ86cj50bPnw4V199tZcNN6txTpjMzMzK7x5gp7yyXYD7I2Jhdy/mHqbq1NzczE9+8hMWLVr0sXOf+tSnePTRR9lzzz0ziMzMyskJk5mZWTdIGipptKTRadGa6fG6OdXOAbaR9FNJ60v6HvBN4Mye3NM9TNXptNNOY8GCBUuUDRw4kAkTJvDMM894jyWzOuGEyczMrHs2A6alD4DT0+8v6qgQEc3A14CvA9OBY4BDu7MHk1Wv5uZmDjnkEG688cYlyiXxhz/8gfPOOy+jyMysL2SaMEk6KB1icEMX9X4j6SFJ8yU9VaROS8dwhZzHZUXqDpB0S1pnv3K0xczM+oeIuKOjtyfvsW1evWsjYsOIGJwu7DCpp/f0kLzqccQRR7DNNtvwxz/+kfnz539YPmDAAE444QQOPvjgDKMzs76QWcIkaX2ST+XuLPEpFwNXdVHnVGC1nMfhReqdALxf4n3NzMwy5SF52WttbeXAAw/k/PPPX2IY3sCBAxk6dCinn346p57a6WKHZlajMtmHSdIQkuTnOGBHkv0qioqII9PnrQRs3knVeRExq4t7fwE4DNgUmN1JvWHAsLzikZ1d28zMzOpPc3MzEyZMYNq0aR87t8Yaa3Duued6cQezOpZVD9PZwPSIKDhkrheOkvSmpOmSTpc0NPekpE8AlwPfjoj/dXUtkmEPuY+pZY7XzMysSx6Sl53m5mYOOuggHnrooY+thrfyyitzxRVXOFkyq3MVT5gk7Q3sDHyvzJc+D/gWsC3JKkQHAP/Iq/Mn4G8RcXMJ1zuXZNhD7mPrMsVqZmZWMg/Jy0ZzczPf+c53eO6554iID8sHDBjA2muvzeTJkxk7dmyGEZpZJVR0SJ6kUcDvgT0iYm45rx0RZ+UcTpf0AnCnpE0iYpqkCcAngX1LvF4b0JZbJqlM0ZqZmVk1mzx5MhMmTODVV1/9sGdJEssttxzHH388BxxwgJcNN+snKj2HaQywEnB3TvIxAEBSOzA2Ih4q073uAwJYj2S51x2BTYD38hKfyyUdHxGjy3RfMzMzq2GTJ09m3LhxtLW1fVjW0NDAqFGjPF/JrB+qdMJ0K7BRXtkpwAiShRhmlvFeowEBr6XHRwI/yaszHfgRcE0Z72tmZlZWkpqAiVnH0R9MnjyZ73//+8ybN2+J8lGjRnHFFVd4CJ5ZP1TRhCkdhjcjt0xSG7BURMxIjycAEyJig5w66wJDSVbTG5Kzu/rMiJgnaUtgS+B2YA6wMcnCEg8Ad6X3fik/nrSn6eWIKGeiZmZmVlYR0QQ0AUhqxAs/9ImO1fD+97//fTgMb8CAAQwfPpxzzz3XyZJZP5XJsuJdGAGsn1d2EfDFnOOOdT23A+4A5pPMTToJWBp4CbgaODUiFvdlsGZmZlbbWltbuf7665k8eTILFixg2LBhtLW1MXz4cHbffXcOPvhgJ0tm/VjmCVNEjM87biL9FC2nbNsurvEwSQ9Td+/tVRzMzMz6sebmZo455hgeeeQRFi9ezMKFC1lxxRVZaaWVOP/88z1fycyyT5jMzMzMsjB58mR++MMf8sorr7Bw4UJWWGEFALbeemt++MMfulfJzIDsNq41MzOzEnnj2vKbNGkSBx54IM899xzvv/8+CxcuZN68eSy33HJOlsxsCU6YzMzMqpw3ri2vSZMmcdRRRzF37lwWL17MgAEDWHbZZdlzzz29Ep6ZfYyH5JmZmVm/MXnyZI455hjee+89IgJIVs3daqut+NWvfuXNaM3sY9zDZGZmZv1Ca2srp59+OvPnz0cSAwYMYJllluEHP/gBkyZNcrJkZgW5h8nMzMz6hZaWFoYPH84yyyzDe++9x5AhQzjrrLM4+OCDsw7NzKqYEyYzMzOra62trbS0tDB48GBWW201tthiC+bMmcPxxx/vZcPNrEtOmMzMzKqcpCZgYtZx1KLW1lZOPvlk2tvbaWho4Lvf/S4LFiygsbHRQ/DMrCROmMzMzKpc7qbukhrx0uJd6uhVev3112lvb6exsZGWlhYWLFjA1ltvnXV4ZlZDnDCZmZlZXWlububnP/85Sy+9NAMHDkQSLS0tNDQ00NjYmHV4ZlZjnDCZmZlZ3Whububoo4/mlVdeYcUVV2SdddbhG9/4BqussoqH4ZlZjzhhMjMzs7rQkSy99NJLvP/++wCsvvrqjB071omSmfWY92EyMzOzmtfa2srPf/5zXn31Vd5//32WXnppPvnJT3LSSSc5WTKzXnEPk5mZmdW01tZWrr32WiKCT3ziE0DSs3TOOecwduzYjKMzs1rnhMnMzMxqVscCDxHBzJkzWXfddVl99dU56aSTnCyZWVk4YTIzM6ty3ofp41pbW7n++uu58MILefPNN/nEJz7Buuuuy5e//GX22msvD8Mzs7JxwmRmZlblvA/TklpbWzn88MO59957effddxkyZAiQDMNzsmRm5eZFH8zMzKxmtLa2cskll/DAAw+wcOFCFi1axMCBAz8chudkyczKzT1MZmZmVhNaW1s5+eSTmTlzJnPnzqWhoYFBgwax5ppreoEHM+szTpjMzMysJrS0tNDe3s4mm2zCiy++yAorrMCKK67Iaaed5mTJzPqMEyYzMzOrCY2NjTQ0NDBnzhzGjh3LPvvs401pzazPOWEyMzOzqtXa2kpLSwuNjY2MGjWKiRMnLnFsZtbXnDCZmZlZVeqYs9Te3k5DQwMTJ05k1KhRTpTMrKK8Sp6ZmZlVpY45S42NjbS3t9PS0pJ1SGbWDzlhMjMzs6rUMWeppaWFhoYGGhsbsw7JzPohD8kzMzPLgKSLgd2B2RGxYdbxVIP8+Uqes2Rm1cAJk5mZWTYuAc4H/pxxHFWhtbWV4447jjlz5jB8+HDOOOOMD5MmJ0pmliUPyTMzM8tARNwJvJV1HNWiubmZBx98kFmzZvHggw/S3NycdUhmZoATJjMzsyVI2kbSvyW9Kikk7Vek3p6SpkuaL+lZSd+udKxmZtb3PCTPzMxsScsCjwIXA1cXqiBpbHruFOBKYEfgQklvRcQ1aZ1bgFULPP3HEXFtKYFIGgYMyyseWcpzq13+fKWxY8cyZswY3n77bVZYYQXGjh2bdYhmZkDGCZOkg4BLgRsjYpdO6v0G+DywIfBCRGxQoE4LsGZe8eURcUB6fg3gJ8D2wCeB2cBk4KcRMaf3rTEzs3oQEVOAKQCSilU7GpgaEU3p8VNpEnUscE16nR3LEM5RwMQyXKeqNDc3c+KJJ7Jo0SJWXXVVzjzzTEaNGsWZZ57pBR7MrOpkljBJWh84HbizxKdcDIwFNu+kzqkkE2g7vJ/z/frA0sARwDNAI/A74FNA0WTNzMysgK2AC/LKbgD+JGlQRCws033OJVkcItdIYGqZrl9xra2tnHjiiTzwwAMMGjSIF198kebmZi/wYGZVK5OESdIQ4CrgOJJhDIWGLHwoIo5Mn7cSnSdM8yJiVpFr3AzcnFP0nKRjgWskLR8R73SjCWZm1r+tCryeVzYLGASMAF7r6gKSrgC2BUZIehmYGBGTcutERBvQJqmJOulpam5u5s0332TAgAEsXryYhQvLlVuamfWNrBZ9OBuYHhGXlfm6R0l6M52Ee7qkoV3UHwbMB97LPyFpmKTG3Ad1Mm7czMyyFxH7R8RqETEoIkbmJ0t5dZsiQhEhYK0Khlk2ra2t/OMf/+DPf/4zbW1ttLe3M2TIEMaMGeP5SmZW1SrewyRpb2BnYJMyX/o84BGSuUmbAKcBoyky3E7SCOBnwIUR0V6gylHUyad5ZmZWdrOAVfLKVgHagTcqH051a21t5eSTT+aVV15h5syZ7LjjjsycOZMddtiB8ePHexiemVW1ivYwSRoF/B74VkTMLee1I+KsiLg1IqZHxJ+B/YGdJX0sMUtXHZoCPEsyLLCQc0k+xct9bF3OmM3MrGbdA+yUV7YLcH8Z5y99SFJTusR5AC+U+/p9raWlhfb2djbYIFmz6eWXX2bdddd1smRmNaHSPUxjgJWAu3NWHhoAIKkdGBsRD5XpXvcBAawHTOsolLQicBPwJrBXRMwv9OSOceO5ZZ2slmRmZnUiHc69bk7RmpJGk8yTnZmWnUPyXvZTkjm5OwDfBPbpi5jS1fia0vgaqbGkqbGxkYaGBubMmcOYMWPYZ599GDt2rJMlM6sJlU6YbgU2yis7hWSC7GHAzI89o+dGAyJn4q2kVYBbgFeAr0TEB2W8n5mZ1YfNgNtzjk9PH/8lWaSBiGiW9DWS1Vl/ArQCh3bswdTf5e+xNGrUKCZOnOglw82sJlU0YUqH4c3ILZPUBiwVETPS4wnAhNy9liStCwwlWZVoSPpJH8DMiJgnaUtgS5I3uDnAxiQLSzwA3JVeY3XgtvT8ocCwnB6jtyJiQbnba2ZmtSci7iD5wK2retcCJW1A21u1tEpex3yl9vZ2GhoamDhxopcMN7OaltUqeZ0ZQbJnUq6LSIbVHUqyf9K09LFZen4+sC9JQvQUcCbJDuxfiojFaZ0vpdfdAmgh6XnqeGzVJy0xMzMrg1paJa9jvlJjYyPt7e20tLRkHZKZWa9ktnFth4gYn3fcRDpOO6ds2y6u8TBJD1NndS7h45v/VcyC9sXMec+dWGZWe4YvM5jBDdX4+ZpVo475Si0tLTQ0NNDY2Jh1SGZmvZJ5wtRfPDXrHfY8/+6swzAz67Z/HLYlmzV+Iusw+rVaGpLn+UpmVm+cMFXIJ4ctzWlfzV/vwsys+q2x4jJZh9Dv1doqeZ6vZGb1xAlThaw4dAjfHLtG1mGYmZmZmVk3eFC6mZmZmZlZEU6YzMzMqpykJkkhKajy4XhmZvXGCZOZmVmVq6Vlxc3M6o0TJjMzMzMzsyKcMJmZmZmZmRXhhMnMzMzMzKwIJ0xmZmZVzos+mJllxwmTmZlZlfOiD2Zm2XHCZGZmZmZmVoQTJjMzMzMzsyKcMJmZmZmZmRXhhMnMzMzMzKwIJ0xmZmZVzqvkmZllxwmTmZlZlfMqeWZm2XHCZGZmZmZmVoQTJjMzMzMzsyKcMJmZmfUjra2tTJ06ldbW1qxDMTOrCQ1ZB2BmZmaV0draysknn0x7ezsNDQ1MnDiRUaNGZR2WmVlVcw+TmZlZP9HS0kJ7ezuNjY20t7fT0tKSdUhmZlXPCZOZmVk/0djYSENDAy0tLTQ0NNDY2Jh1SGZmVc9D8szMzKqcpCZgYm+vM2rUKCZOnEhLSwuNjY0ejmdmVgInTGZmZlUuIpqAJgBJjfRi89pRo0Y5UTIz6wYPyTMzMzMzMyvCCZOZmZmZmVkRTpjMzMzMzMyKcMJkZmZmZmZWhBMmMzMzMzOzIjJNmCQdJCkk3dBFvd9IekjSfElPFanTkl4r93FZXp3Bks6WNFvS+5JukbRBOdtkZmZmZmb1I7OESdL6wOnAnSU+5WLgqi7qnAqslvM4PO/8WcC3gHHAWGAecLOkoSXGYGZmZmZm/Ugm+zBJGkKS/BwH7Ais2ln9iDgyfd5KwOadVJ0XEbOK3HN54BDgkIiYkpYdCLwO7A/8sZvNMDMzMzOzOpfVxrVnA9Mj4jJJO5bxukdJOhZ4FbgOOCUi5qXnNgMGAzd1VI6IuZLuBj5PXsIkaRgwLO/6awK8/PLLZQzZzKw+5fxfOTDLOOrQQPB7kZlZKcrxXlTxhEnS3sDOwCZlvvR5wCPA7PTapwGjgV3S86sCkZ7PNYtk+F6+o4CJhW609dZb9zZWM7P+ZDXguayDqCOrgd+LzMy6qcfvRRVNmCSNAn4P7BERc8t57Yg4K+dwuqQXgDslbRIR03pwyXOBS/LKBgNrA88Ci3pwzZHAVGBroJY/GqyXdkD9tKVe2gH10xa3I/k0bzXggXIH1c89QPJ6vEb33oteANbqRZ1i5/LLOzvO/35ryvN7UkrbuqpX6FxXZcXa2vG1XP8P9LZ9ffHalat9Wb12+ce1/rNZT69dofLevHa9fi9SRPT0ud2/mfQV4F8s+R98x8ITi4GxEfFQJ89vAvaLiC5XtpM0CJgP7B8RV0naHrgVWD0iXsupdxPwakSM715ruk9SI+mLGhEtfX2/vlIv7YD6aUu9tAPqpy1uh1UbSRER6mmdYufyyzs7zv+enOSiNz9fpbStq3qFznVVVqytOV8bqYL29cVrV672ZfXa5R/X+s9mPb12XbUn/7ivXrtclV4l71ZgI5Khch2PycA96fePl/FeowGRfAIH8CCwANipo0K6Ot7ngbvLeF8zMzMzM6sTFR2Slw7Dm5FbJqkNWCoiZqTHE4AJub1IktYFhpLMQxoiaXR6amZEzJO0JbAlcDswB9iYZGGJB4C70nu/I+lC4JeSZpMsDHEy8BZwRZ802MzMrHqc3Ms6xc7ll3d2XOz73ir1Wt1tX1dlxdpazrZ153qlvkbFyvvTa5d/XOvtq6e2FSrPon0fquiQvIIBSJcAq0bELulxEzAxr9vtDuCLBZ6+XUTcIWlT4LfABsDSwEvAtcCpEdGWc53BwC+BA0gSsHuAwyOi4Ga45VYvQ1vqpR1QP22pl3ZA/bTF7TDrWr3/fLl9taue2wb13b6+aFtWy4p/KPLmDkVEE9CUV7ZtF9d4mKSHqat7LQCOTh9ZaCPJfNsyun+5tFEf7YD6aUsb9dEOqJ+2tOF2mHWljfr++WrD7atVbdRv26C+29dGmduWeQ+TmZmZmZlZtar0og9mZmZmZmY1wwmTmZmZmZlZEU6YzMzMzMzMinDCVAGS9pQ0XdJ8Sc9K+nbWMXVFUpOkKPBoyKlTde2StI2kf0t6NY13vwJ1tpLULOkDSa2STihQ59OSbpX0vqTZks5KN0OumK7aIml8kddo3bx6Xba3j9txXHr/tyW9JemWdCuA/Hpd/jxl2ZZS2lHK701aL9PfHUmHSHokbcu89Ptx3Y0x658tMzOzSnDC1MckjQWuBv5Jsj/Ur4ELJX0ly7hKNBNYLfcREe1Q1e1aFngUOLzQSUlrAjcB04BNgeOAkyR9P6fOcsAtwNvAWGA8cCBwRl8GXkCnbUnNJ+81IllKEyitvRWwLXAhsDXJRtEvATfnJnal/DxVQVu2pYt2pIr+3kDV/O68CpwEbJ7G8CdgkqQ9So2xCl4P64ckXZx+iDWj69rVT9Iukp6WNFPS8VnHU2719np1kDRK0u2SnpD0eL39vydpKUn3S3o0bV+f7G2UJUkDJU2T9J+SnhARfvThA7gSuD2v7C/A3VnH1kXcTcBTtdwuIID98spOB54nXSEyLfs58HJHGXAYMA9YNqfOwcAHwHJV1JbxwAddPK/L9mbQlgHAG8AR3fl5qra2FGlHp783pbY1o9flYeDMWn09/OgfD2AbkgR9RtaxlKEtA4HngLWBwSQfkH0m67j8epXUrtWATdPvlwOeqafXDhAwNP1+ENAMbJF1XGVu4w+AvwL/KaW+e5j63lYkn8LmugH4XKWHePXAmpJelvSipGskfTbnXK22ayvg5kh/W1I3AJ8E1sypc3dEvJtXZwgwpiJRlm6wpBckvSLpJknb5J0vpb2VthTJv+WcnLJSfp6qrS2F2gGd/95Alf3uSBogaSdgfeCOtLgWXw/rByLiTuCtrOMok82BmRHxfCT7RF4J7JVxTGVVZ6/XhyLitUj2ACUi5gJPkvzfVxciMS89HJQ+6mYfIkkjgd2Ai0p9jhOmvrcq8Hpe2SySH74RlQ+nZM3A/wfsStKT0QDckzP8qFbbVSxuSD4xKlbndZL/LFajejwNfBvYG/g6yTCr2yV9IadOKe2ttDNJNpO7NqeslJ+namtLoXZ09XsDVfK7I2kNSfNIhnVOJukpu64bMVbb62EZUgnzR9N6VTf3tSfK1N5PAq05xy9TJX901/PrWe62SWoENiH5/z9z5WpfOmTtEWA2yYdjmbevjK/duSTDyBeXem8nTFZQREyJiCsj4rGIuB34Ksl/5kdkHJqlIuLeiLgkIqZFxN0RMR64HTg249CKkvQT4JvAV9JP5WpSsXbU2O/Nq8Bo4HMk85nOkbRzphFZLetyzmWJc+NukTSjwKPael7K0t4qVs/tK1vbJA1N6xwVEe/0VcDdVJb2RcSiiBgNjAQ2l7RhH8Zcql63TdLuwOyIeKg7N27ouor10ixglbyyVYB2kvkPNSEiFkp6AFgvLarVdhWLG+C1TuqsTDKm9zWq273APjnHpbS3ItJJo0cCOxX4j6qUn6eqaEsX7VhCgd8bqJLfnUgWopiZHj4iaS3gZODGEmOsitfDqkNETAGmAEgqVu1oYGpENKXHT6V/3BwLXJNeZ8c+DbRMytTeV4BROfVHpmWZK9frWY3K1bZ0ePI/gcsj4uo+DLlbyv3aRUSbpNuBXYBMF+8oU9s+D+wpaVeSofXLS7osIg7o7N7uYep79wA75ZXtAtwfEQsziKdHJA0g+TS64w+hWm3XPUD+G/IuJG9SL+bU+bykZfLqzAe69YlEBjZlyT9WS2lvn5P0S5Jelh0j4sECVUr5ecq8LSW0I79+/u8NVO/vzgCSNw+okdfDak5Vzd+rgK7a+wDwKUlrSRoM7EcyPLZW1PPr2WnblPy1Pgl4MiLOrnh0vddV+1aSNAxA0tIk7wdPVTbEHuu0bRFxQkSMjIhGkt+527pKlsAJUyWcA2wj6aeS1pf0PZKhPGdmHFenlOw7tG36H/lmwOUkn5L/Nq1Sle2SNFTSaEmj06I10+OOOSQXAKtI+p2SvZb2A44BfpUzef1y4B3gL5I2krQL8Avg95UcRtZVWyRNVLIk7TqSPivp18CXScbmdiilvX3djvNIus+/CbwiadX0sUJOtVJ+njJtSyntKOH3Bqrgd0fSaTlxflrSD0hWgvxzN2LM/GfLak6v5+9JuoKkJ319JYurHFzeEMuq0/amvbwTSHp1nwT+FhGPVzbEXuny9ayx1ytXV237PMl2I9sr2cfukbTHolZ01b7VSOZEP0aS2N8cEaUtv529vpknnOWSfv3lQbLqzQxgAckSogdnHVMJMV9BMvdiPsmn49cBm1V7u0j2yokCjzty6nweuD9t28vAiQWu8xngVuB94H/A2cCgampLGlMLyXLnb5DMX9qxwHW6bG8ft6NQGwK4pLs/T1m2pZR2lPJ7U2pb+7gtfyBZEvwD4E2SP2gOrKXXw4/qfVBgG4S0fAHw7byyHdL6q2Udt9vb/9pXz22r9/ZVum2ew1QBEXEtS66kVfUiYv8S6lRduyLiDpK5Rp3VuZtkOdfO6jxB8guWma7aEhE/INlHoKvrdNnevhQRnb4eOfW6/HnKsi2ltKOU35u0Xqa/OxFxaAl1qvr1sJpUFfP3Kqje21vP7avntkF9t69P2uYheWZmZlYJ1Tp/r6/Ue3vruX313Dao7/b1Sdvcw2RmZma9ki6vnLvf2Jrp/Mt5EdGxGuM5wN2SfgpcRdKL/02WXNmzJtR7e+u5ffXcNqjv9mXZNqVj+8zMzMx6RNK2JPMo8/03IrbNqbcXcCrJYiitwGkRMakCIZZVvbe3nttXz22D+m5flm1zwmRmZmZmZlaE5zCZmZmZmZkV4YTJzMzMzMysCCdMZmUiqUlSe/r9sPT4sxnF0pjef40C50LST7KIy8zMzKzWOGEy6xvDgIlAJgkT0Jje/2MJE7Al8KeKRmNmZmZWo7ysuFmNkDQkIub39joRcV854jEzMzPrD9zDZFZmkhqBF9LDv6RD4CJdDrOjzgRJj0uaL+k1SWdJGpJzftv0OXtKukzSHKA5PbeLpCmSZkl6V9Kjkg7OfS4fLbs5Nef+jen5jw3Jk7S7pAckfSDpzfSeq+XVCUk/kXScpFZJb0u6TtLIsvzDmZmZmVUhJ0xm5fcasHf6fRPJELgtgYcBJJ0JnAVcA+wOnAIcDFxa4FoXAG8CXweOT8vWBm4CxgN7Av8ELpD0vfT8w8Dh6feH5tz/tULBStoNmJye/xrwQ2BH4A5Jy+ZV/y7weeAwYAKwOXBZsX8IMzMzs1rnIXlmZRYR8yVNSw+fyx0CJ2kt4AfAcRFxVlp8s6Q24DJJP4uIJ3Iud2tEfD/v+r/Lud4A4L/AqiRJzO8i4h1JHdd4ooQheD8DHge+EhGL0+s+BdwDHAj8PqfuXOCrOfVWAs6StHJEzO7iPmZmZmY1xz1MZpW1I8nv3ZWSGjoeJD1GAF/Iqz85/wKSVpd0kaRWYAGwEPg/kh2tu0XSUGAT4MqOJAggIu4FXgS2yXvKjbn1SBItKLy4hJmZmVnNc8JkVlkrp19fJkl0Oh4dvTMr5tV/Pfcg7VH6N7AzcBqwE/A54I/AELpvGCBgVoFzs4DheWVz8o47FqFYqgf3NjOzAiRtl84b/WVO2UBJM9K5r4PSsh1zRjSYWR/xkDyzynor/bot8G6B86/kHUfe8TrApsD+EXFlR6Gk/+thPG3pPVYtcG5V4LkeXtfMzHpuE5L5qBvmlB1KMqpgRkQszKnnhMmsj7mHyaxvFOt5uRlYDKweEQ8WeBRcmCHHMunXBR0FkpYHvlLi/ZcQEfNI3my/Lkk519wCWBOY2kU8ZmbWS5J+mPYodXx4tSnwZ+DT6flhwPdJRhjkJkjdTpgkTZJUaJEhJF2fxnFIkfMfbtCeVxaS3pI0uMBzfpOeb+nsOkXuFUUel+XV/YakeyXNkTRP0rOS/iLpU92pJ+k0STd0Fpf1T+5hMusbr5P0Ju0v6WngfeDpiJgp6VfAHyX9P+AuYBHJRrO7A0dGxIudXPdJoBX4haTFwEDgBJKeok/k1Hsmve7Bkt4jSbAei4gFfNxPSd6E/yXpQpJhg6cBz5K8YZuZWd/aGHg9IjqGR28CnAMcJmk54CTgt8AY0i0mcur9jhJJ+gzJYj4bFji3CvCl9PAA4MJuxL+YZFj4riQrwHZcswH4BsmCQT2xiI/P7QX4X849fkCy8uzvgJ8D7SSJ5teBz5C8l5Va72zgRUnbRsQdPYzZ6pATJrM+EBGLJY0nSTxuIunp2Q64IyJ+lCZR3wOOIUlmWoAbSJYQ7+y6CyR9BTgf+CvJm8b5JG9UP8+p96akQ0mWIr8DGASsld4n/5rXSdoLmAhcDbwHTAGOjYj3etJ+MzPrlo2BRwEkLUOyfcQM4DGSEQQ7kSRLD5OuXJpu+7Bux/NKdBQwNSKeKXBuf5IP4W4AdpbUGBEtJV43gGuBb5GTMJEkYMuTfCi3eTfi/OjCXa/0ejRwRUQcnlN2E/DrdN5vyfUi4g1J16R17+hJvFafnDCZlUlENJHsu9Rx/G+SN4lCdS8GLu7kWneQLMZQ6NzDwFYFTp2SV28SMKnA8z923c5i7eJ5ReM0M7OuKdm0fAOSRAXgs8Az6RYVj5J8KPYtkmTmU3yUIH0WeCEiSuq9kbQ0sB/JB3WFHAA8RbL1xRPp8SlF6hZyGfBPSctHxDtp2bdI3lveKf60XvsEeQskdchb1bXUelcCV0taJSIK1rf+x3OYzMzMzLLzGZJRAI+kx5vy0bykfwEnRMR/SBKk53N6/jfJeU4ptgCWA+7OPyHp0yQ9WJdHxJMkPVkHdKsVSW/NXGCf9JrLAnsBl3fzOvmxNRR45H5Q9wDwHUlHSmrs5FKl1rubpENhh97EbfXFCZOZmZlZdjZOv3b0HH2YCEXEkzmblXesnEfO8c6SWnIeO3dyn7EkQ8CfKnDuQJJhdR3JzWXA+pI+V2ojIqIduIqkVwlg7/R+U0q9RgEDWXILjo7HoTl1vkeywuyvgRckvSzpQkkb5V2rpHoR8RbwEkmCaQZ4SJ6ZmZlZlkYDHwBPA0TEdwtViog/AH/IOf4uULBuEasBc/KGn5H21nwTuCciXkiLrwDOJEmkHujGPS4H7pa0Okni9Pd07m03LrGERRROXD5cHCkinkiTnu1I5kx9ATgYGCfpKxExpTv1Um8Aq/c0aKs/TpjMzMzMsrMx8HjaQ9OXluKjLSdybUOyjcT56fLlkCRwU4FvSPpBqbFFxH2SXiBZNGFHYPveBh0RD5ZQZyHJkMCbACRtBtwOnEpOD1ep9Ujav3RvY7f64SF5ZmZmZtn5cIW8PvYWMKxA+YHp1zOBOTmPbUm2mehsmF8hl5MsHPEKGe3llyZZN5PuY9WDesNJepnMAPcwmZmZmWVC0hokf5xXImF6Glhe0ooR8WZ6/6VIFmm4haSXJdcAkkUnDgSu68Z9/kySBE6JiOh11F2QtGrO/lUdZQNIllyf1YN6A4A1SOZxmQFOmMzMzMyy0rHgwyMVuNdd6dfNgBvT7/cAVgB+W2ijVkl/B74pablSly+PiOdI9o7qiiTtU6D8qYiYkVOp0BymuRHxePr9DEk3ANeTbOy+EsncpI2AI3OeU2q9zwDLAneW0AbrJ5wwmZmZmWWjI2F6rK9vFBEzJU0DduOjhOlAkg3Qi/UgXUKSVOwD/KnMIQ0A/l6g/Jckm65DskrevQXqNPPRYhAnAbunz1uZZJ7WY8C3IuKvOc8ptd5uwMvAPd1vktUrVaC31MzMzMwyJum7wM+BkRVYZKImpZsF/yvdjN4M8KIPZmZmZv3FpcC7wEFZB1KN0n2sRgLnZhyKVRknTGZmZmb9QEQsAMYDi7uo2l8tCxwUEW1ZB2LVxUPyzMzMzMzMinAPk5mZmZmZWRFOmMzMzMzMzIpwwmRmZmZmZlaEEyYzMzMzM7MinDCZmZmZmZkV4YTJzMzMzMysCCdMZmZmZmZmRfz/IS+FYzLZ8EAAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 864x396 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "result2, loss2 = merge_mle(ds, torch.distributions.Normal, lr=1e-3,\n",
    "                           progress_bar=True, return_loss=True)\n",
    "result2 = result2[[\"I(+)\", \"SIGI(+)\", \"I(-)\", \"SIGI(-)\"]].stack_anomalous()\n",
    "\n",
    "# Plot loss function\n",
    "fig, ax = plt.subplots(ncols=2, figsize=(12, 5.5))\n",
    "ax[0].plot(loss2)\n",
    "ax[0].set_ylim(4.15e6, max(loss1))\n",
    "ax[0].set_xlabel(\"Iteration\")\n",
    "ax[0].set_ylabel(\"Loss\")\n",
    "ax[0].set_title(\"Loss Function\")\n",
    "ax[1].loglog(merged_normal[\"I\"].to_numpy(), result2.loc[merged_normal.index, \"I\"].to_numpy(), \"k.\", alpha=0.5)\n",
    "ax[1].set_xlabel(r\"$I^{ML}$ (AIMLESS)\")\n",
    "ax[1].set_ylabel(r\"$I^{ML}$ (PyTorch)\")\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see here that the loss function does not change during the optimization, and that the final maximum likelihood estimates for the intensities are equivalent to the input. This validates that the merging function is working as expected."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---\n",
    "### Assess Student's _t_-Distributed Error Model\n",
    "\n",
    "A Student's _t_-distribution is useful in modeling data that contain outliers. This distribution places more density in the tails than a normal which makes maximum likelihood estimates robust to outlying measurements. It is parameterized by a degree of freedom, $\\nu$, which can take a value between $[0, \\infty)$ and controls the heaviness of the tails. As $\\nu\\to\\infty$, the probability density function approaches a normal distribution.\n",
    "\n",
    "Below, we will set up a few helper functions for merging our data within randomly partitioned half-datasets. We will do this for the Student's t-distribution scanning several degrees of freedom and for the normal distribution so that we can compare the results. Based on the previous example, we will compute $CC_{anom}$ using a Spearman correlation coefficient and repeated 2-fold cross-validation to compare the different error models."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "def sample_halfdatasets(data):\n",
    "    \"\"\"Randomly split DataSet into two equal halves by BATCH\"\"\"\n",
    "    batch = data.BATCH.unique().to_numpy(dtype=int)\n",
    "    np.random.shuffle(batch)\n",
    "    halfbatch1, halfbatch2 = np.array_split(batch, 2)\n",
    "    half1 = data.loc[data.BATCH.isin(halfbatch1)]\n",
    "    half2 = data.loc[data.BATCH.isin(halfbatch2)]\n",
    "    return half1, half2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "def merge_dataset(dataset, nsamples, distribution, *args, **kwargs):\n",
    "    \"\"\"\n",
    "    Merge dataset with repeated 2-fold cross-validation using `distribution`\n",
    "    as error model.\n",
    "    \"\"\"\n",
    "    dataset = dataset.copy()\n",
    "    samples = []\n",
    "    for n in tqdm(range(nsamples)):\n",
    "        half1, half2 = sample_halfdatasets(dataset)\n",
    "        mergedhalf1 = merge_mle(half1, distribution, *args, progress_bar=False, **kwargs)\n",
    "        mergedhalf2 = merge_mle(half2, distribution, *args, progress_bar=False, **kwargs)\n",
    "        result = mergedhalf1.merge(mergedhalf2, on=[\"H\", \"K\", \"L\"], suffixes=(1, 2))\n",
    "        result[\"sample\"] = n\n",
    "        samples.append(result)\n",
    "    return rs.concat(samples).sort_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "def merge_dataset_normal(dataset, nsamples):\n",
    "    \"\"\"\n",
    "    Merge dataset with repeated 2-fold cross-validation using normal distribution\n",
    "    as error model.\n",
    "    \"\"\"\n",
    "    dataset = dataset.copy()\n",
    "    samples = []\n",
    "    for n in tqdm(range(nsamples)):\n",
    "        half1, half2 = sample_halfdatasets(dataset)\n",
    "        mergedhalf1 = rs.algorithms.merge(half1)\n",
    "        mergedhalf2 = rs.algorithms.merge(half2)\n",
    "        result = mergedhalf1.merge(mergedhalf2, on=[\"H\", \"K\", \"L\"], suffixes=(1, 2))\n",
    "        result[\"sample\"] = n\n",
    "        samples.append(result)\n",
    "    return rs.concat(samples).sort_index()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "*Note:* Using these settings, the following will take ~15 min to complete. For the pre-print, this was run with `nsamples=15`. It is possible to run into occasional numerical instabilities when computing the Hessian for `df=4.0`, but these will only impact $\\sigma_I^{ML}$ estimates which are not used here. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "e90b8157e9544b92993a1bf9fdbd16de",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/5 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "c3b8a44979194a8797bbab8b188461b0",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/5 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "5ad2c52e888140d4aa7dacb1d02bba8b",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/5 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "6352e6d754a24eb69cd40833d62ca824",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/5 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "935dbe5bc04d46c0ad929bfd045aee20",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/5 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "merged_df4 = merge_dataset(ds, 5, torch.distributions.StudentT, 4.0)\n",
    "merged_df8 = merge_dataset(ds, 5, torch.distributions.StudentT, 8.0)\n",
    "merged_df16 = merge_dataset(ds, 5, torch.distributions.StudentT, 16.0)\n",
    "merged_df32 = merge_dataset(ds, 5, torch.distributions.StudentT, 32.0)\n",
    "merged_df64 = merge_dataset(ds, 5, torch.distributions.StudentT, 64.0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "d537839fa249477f99f60a35675304f2",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/5 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "merged_dfinf = merge_dataset_normal(ds, 5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that we have merged the data using Student's _t_-distributions and a normal distribution as the error model, we can compute $CC_{anom}$ and plot the results by resolution bin."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "def computeCC(merged, bins=12):\n",
    "    \"\"\"Compute CCanom for input data\"\"\"\n",
    "    merged, labels = merged.assign_resolution_bins(bins=bins)\n",
    "    merged[\"ANOM1\"] = merged[\"I(+)1\"] - merged[\"I(-)1\"]\n",
    "    merged[\"ANOM2\"] = merged[\"I(+)2\"] - merged[\"I(-)2\"]\n",
    "    groupby = merged.acentrics.groupby([\"sample\", \"bin\"])[[\"ANOM1\", \"ANOM2\"]]\n",
    "    spearman = groupby.corr(method=\"spearman\").unstack().loc[:, (\"ANOM1\", \"ANOM2\")]\n",
    "    results = spearman.groupby(\"bin\").agg([\"mean\", \"std\"])\n",
    "    return results, labels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "resultsinf, labels = computeCC(merged_dfinf)\n",
    "results4, labels = computeCC(merged_df4)\n",
    "results8, labels = computeCC(merged_df8)\n",
    "results16, labels = computeCC(merged_df16)\n",
    "results32, labels = computeCC(merged_df32)\n",
    "results64, labels = computeCC(merged_df64)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "def plot(results, label, ax, color=None):\n",
    "    ax.errorbar(results.index, results[\"mean\"], yerr=results[\"std\"], color=color, label=label)\n",
    "    return\n",
    "\n",
    "fig = plt.figure(figsize=(10, 6))\n",
    "ax = fig.gca()\n",
    "with sns.color_palette(\"viridis\", 5) as palette:\n",
    "    plot(results4, r\"Student-T ($d.f.=4$)\", ax, color=palette[4])\n",
    "    plot(results8, r\"Student-T ($d.f.=8$)\", ax, color=palette[3])\n",
    "    plot(results16, r\"Student-T ($d.f.=16$)\", ax, color=palette[2])\n",
    "    plot(results32, r\"Student-T ($d.f.=32$)\", ax, color=palette[1])\n",
    "    plot(results64, r\"Student-T ($d.f.=64$)\", ax, color=palette[0])\n",
    "plot(resultsinf,\"Normal\", ax, color=\"k\")\n",
    "plt.ylabel(r\"$CC_{anom}$ (Spearman)\")\n",
    "plt.xlabel(r\"Resolution Bin ($\\AA$)\")\n",
    "plt.legend(loc='center left', bbox_to_anchor=(1, 0.5), title=\"Error Model\")\n",
    "plt.ylim(0, 0.72)\n",
    "\n",
    "plt.xticks(resultsinf.index, labels, rotation=45, ha='right', rotation_mode='anchor')\n",
    "plt.grid(axis=\"y\", linestyle='--')\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---\n",
    "### Summary  \n",
    "\n",
    "This dataset was scaled and merged in AIMLESS, which involves rounds of outlier rejection and implicitly assumes that the intensities are normally distributed about the true mean. In the [first section](3_mergingerrormodel.ipynb#Normal-Error-Model), we observed that the residuals from merging are not normally distributed, suggesting that the normal error model may have been suboptimal. We implemented a more general maximum likelihood-based approach for merging data using different probability distributions and used it to evaluate the performance of Student's _t_-distributed error models. This seemed like a reasonable starting point because it is often more robust to outliers than a normal distribution. \n",
    "\n",
    "Using repeated 2-fold cross-validation, we saw that a Student's _t_-distribution with a low degree of freedom ($\\nu=4$) outperforms the normally distributed error model when assessed using $CC_{anom}$. Furthermore, the performance seems to approach that of the normal distribution when the degree of freedom is increased, which is expected since the _t_-distribution approaches a normal disitrbution as $\\nu\\to\\infty$.\n",
    "\n",
    "Although this dataset is quite high quality and was used to phase and refine a model from the [native sulfur SAD signal](http://doi.org/10.2210/pdb7L84/pdb), it still shows that there can be an incremental improvement in $CC_{anom}$ from revisiting assumptions regarding error models during merging. This model is implemented in ~40 lines of code using `PyTorch`, and can be quickly applied to any dataset of interest. By lowering the barrier to implementing such models, `reciprocalspaceship` makes it easy to try new analyses and to revisit some of the assumptions made in crystallographic data reduction."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
